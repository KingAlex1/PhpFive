<?php

namespace Core;

class DataBase
{

    protected $db;

    public function __construct()
    {
        $opt = [
            \PDO::ATTR_ERRMODE => \PDO::ERRMODE_EXCEPTION,
            \PDO::ATTR_DEFAULT_FETCH_MODE => \PDO::FETCH_ASSOC
        ];
        $this->db = new \PDO('mysqli:host =' . Config::HOST .
            ';dbname=' . Config::BDNAME . Config::LOGIN . Config::PASS, $opt);
        $this->db->exec('SET NAMES UTF8');
    }

    public function select($sql, $params = [])
    {
        $query = $this->db->prepare($sql);
        $query->execute($params);
        $this->check_error($query);
        return $query->fetchAll();
    }

    public function insert($table, $obj)
    {
        $keys = [];
        $masks = [];
        foreach ($obj as $key => $value) {
            $keys[] = $key;
            $masks[] = ':' . $value;
        }
        $fields = implode(', ', $keys);
        $values = implode(', ', $masks);
        $sql = "INSERT INTO $table ($fields) VALUES ($values)";
        $query = $this->db->prepare($sql);
        $query->execute($obj);
        $this->check_error($query);
        return $this->db->lastInsertId();
    }

    public function update($table, $obj, $where, $params = [])
    {
        $pairs = [];
        foreach ($obj as $key => $value) {
            $pairs[] = "$key= :$key";
        }
        $pairsStr = implode(',' , $pairs);
        $sql = "UPDATE $table SET $pairsStr WHERE $where";

        $merge = array_merge($obj, $params);
        $query = $this->db->prepare($sql);
        $this->check_error($query);

        return $query->rowCount();
    }

    public function delete ()





}